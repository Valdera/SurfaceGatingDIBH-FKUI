<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SurfaceGatingDIBH"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--Hoverless Button-->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--System Icon Button-->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <!--Window Control Button-->
    <Style TargetType="{x:Type Button}"  x:Key="WindowControlButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="LayoutTransform" >
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Window Close Button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Submit button -->
    <Style TargetType="{x:Type Button}"  x:Key="SubmitButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource WordOrangeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="local:IsBusyProperty.Value" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, 
                                        Converter={local:BooleanToVisiblityConverter}}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock  Style="{StaticResource SpinningText}"
                                        Visibility="{TemplateBinding local:IsBusyProperty.Value, 
                                            Converter={local:BooleanToVisiblityConverter},
                                            ConverterParameter=True}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryLightColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Tracking Navigation Button-->
    <Style TargetType="{x:Type Button}" x:Key="NavigationTrackingButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource GreyDarkColorBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoBold}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="220" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="Center"                                   
                              Margin="{TemplateBinding Padding}">
                            <materialDesign:PackIcon Kind="GraphOutline" VerticalAlignment="Center"/>
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                       Margin="20 0 0 0"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PatientInfo Navigation Button-->
    <Style TargetType="{x:Type Button}" x:Key="NavigationInfoButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource GreyDarkColorBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoBold}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="220" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="Center"                                   
                              Margin="{TemplateBinding Padding}">
                            <materialDesign:PackIcon Kind="FaceProfile" VerticalAlignment="Center"/>
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                       Margin="20 0 0 0"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Setting Navigation Button-->
    <Style TargetType="{x:Type Button}" x:Key="NavigationSettingButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource GreyDarkColorBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoBold}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="220" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid HorizontalAlignment="Center"                                   
                              Margin="{TemplateBinding Padding}">
                            <materialDesign:PackIcon Kind="Settings" VerticalAlignment="Center"/>
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                       Margin="20 0 0 0"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text button -->
    <Style x:Key="TextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource WordOrangeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Previous Button-->
    <Style TargetType="{x:Type Button}"  x:Key="PreviousButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource GreyDarkColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Margin" Value="0 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="50"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <materialDesign:PackIcon Margin="{TemplateBinding Padding}" 
                                                     Kind="ArrowLeftBold" 
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     FontSize="{StaticResource FontSizeLarge}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryLightColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Next Button-->
    <Style TargetType="{x:Type Button}"  x:Key="NextButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource GreyDarkColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Margin" Value="0 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="50"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <materialDesign:PackIcon Margin="{TemplateBinding Padding}" 
                                                     Kind="ArrowRightBold" 
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     FontSize="{StaticResource FontSizeLarge}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryLightColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Refresh Port-->
    <Style TargetType="{x:Type Button}"  x:Key="RefreshPort" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundVeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Margin" Value="0 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="50"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <materialDesign:PackIcon Margin="{TemplateBinding Padding}" 
                                                     Kind="Refresh" 
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     FontSize="{StaticResource FontSizeLarge}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Go button -->
    <Style TargetType="{x:Type Button}"  x:Key="GoButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource WordOrangeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryLightColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource PrimaryColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>